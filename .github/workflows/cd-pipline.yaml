name: cicd-pipeline
on:
  push:
    branches:
      - master
      - main
    paths-ignore:
      - "kubernetes"
      - "README.md"

permissions:
  id-token: write
  contents: write
  actions: write

jobs:
  code-quality-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./swiggy-app

    strategy:
      matrix:
        node-version: [20.x]
        architecture: [x64]

    steps:
      - name: Checkout git repository
        uses: actions/checkout@v4

      - name: USE NODEJS ${{ matrix.node-version }} - ${{ matrix.architecture }}
        uses: actions/setup-node@v4

      - name: Install Project Dependencies
        run: |
          npm i
          npm run lint
          npm install --save-dev --save-exact prettier
          npm run prettier
          npm test
        env:
          CI: true

      - name: Build
        run: npm run build
        working-directory: ./swiggy-app

      - name: Setup SonarQube Scanner
        uses: warchant/setup-sonar-scanner@v8

      - name: Analyze with SonarCloud
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets._GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: swiggy-app
          args: >
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.host.url=${{ secrets.SONAR_URL }}
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
            -Dsonar.sources=src/
            -Dsonar.verbose=true

  code-security:
    needs: code-quality-test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./swiggy-app

    steps:
      - name: Checkout Git Repository
        uses: actions/checkout@v4

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Install Snyk CLI
        uses: snyk/actions/setup@master
        with:
          version: latest
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Snyk Authenticate
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      - name: Snyk Code Test
        run: snyk code test --all-projects
        continue-on-error: true

  build-scan-and-push:
    needs: code-security
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./swiggy-app

    permissions:
      contents: read
      security-events: write
      actions: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          docker build -t docker.io/${{ secrets.DOCKER_USERNAME }}/swiggy-clone-main:${{ github.sha }} .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "docker.io/${{ secrets.DOCKER_USERNAME }}/swiggy-clone-main:${{ github.sha }}"
          format: "sarif"
          output: "trivy-results.sarif"
          severity: "CRITICAL,HIGH"

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy-results.sarif"

      - name: Install Snyk CLI for Docker scanning
        uses: snyk/actions/setup@master
        with:
          version: latest

      - name: Snyk Authenticate for Docker scanning
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      - name: Snyk Container monitor
        run: snyk container monitor ${{ secrets.DOCKER_USERNAME }}/swiggy-clone-main:${{ github.sha }} --file=Dockerfile

      - name: Run Snyk to check for vulnerabilities in the Docker image
        uses: snyk/actions/docker@master
        with:
          image: ${{ secrets.DOCKER_USERNAME }}/swiggy-clone-main:${{ github.sha }}
          args: --file=swiggy-app/Dockerfile --severity-threshold=high
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Push Docker image to Docker Hub
        run: |
          docker push docker.io/${{ secrets.DOCKER_USERNAME }}/swiggy-clone-main:${{ github.sha }}
